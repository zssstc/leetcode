#807. Max Increase to Keep City Skyline
class Solution:
    def maxIncreaseKeepingSkyline(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        stb,slr=self.skyline(grid)
        ans = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                ans += (min(stb[j],slr[i]) - grid[i][j])
        return ans
    def skyline(self,grid):
        stb=[]
        slr=[]
        for i in range(len(grid[0])):
            m = 0
            for j in range(len(grid)):
                if grid[j][i] > m:
                    m = grid[j][i]
            stb.append(m)
        for i in range(len(grid)):
            m = 0
            for j in range(len(grid[0])):
                if grid[i][j] > m:
                    m = grid[i][j]
            slr.append(m)
        return stb,slr
        
#leetcode solution
#skyline: use row_maxes = [max(row) for row in grid],   col_maxes = [max(col) for col in zip(*grid)]
